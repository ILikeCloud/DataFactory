{
	"name": "p_sql_to_adls_loop_v3",
	"properties": {
		"description": "V3 is using the Select Fileds from table, this is a filed value from parameter table",
		"activities": [
			{
				"name": "Lookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select\nlineid, src_server,src_db,src_schema,src_table,src_type,dst_server,dst_db,dst_schema,dst_table,dst_type,dst_directory,src_sql_select_statement\nFrom pipeline_parameter2\nwhere process_type = 'sql-adls' and isactive = 1\norder by priority_lane",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_ASQLDB_PIPEINE_PARAMETER",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup').output.value",
						"type": "Expression"
					},
					"batchCount": 4,
					"activities": [
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Wait1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@item().src_sql_select_statement",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"parallelCopies": 10
							},
							"inputs": [
								{
									"referenceName": "datasource_azuresql_noschema",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "datasource_adls2_v2",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@item().dst_table",
											"type": "Expression"
										},
										"table_catalog_name": {
											"value": "@item().dst_schema",
											"type": "Expression"
										},
										"directory": {
											"value": "@item().dst_directory",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Stored procedure to save results",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_pipeline_parameter_table]",
								"storedProcedureParameters": {
									"LastModifiedtime": {
										"value": {
											"value": "@formatDateTime(pipeline().TriggerTime,'s')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"lineid": {
										"value": {
											"value": "@item().lineid",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"status": {
										"value": "Successful",
										"type": "String"
									},
									"rowscount": {
										"value": {
											"value": "@activity('Copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "DS_AZSQLDB_PipelineParameteres",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Stored procedure to save results_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_pipeline_parameter_table]",
								"storedProcedureParameters": {
									"LastModifiedtime": {
										"value": {
											"value": "@formatDateTime(pipeline().TriggerTime,'s')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"lineid": {
										"value": {
											"value": "@item().lineid",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"status": {
										"value": "Fail",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "DS_AZSQLDB_PipelineParameteres",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Set Select Statement Variable",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "table_select_statement",
								"value": {
									"value": "@concat('Select ', '''select ''','+STRING_AGG( ''[''+a.COLUMN_NAME+'']'','','') +'' from [',item().src_schema,'].[',item().src_table,']'' FROM information_Schema.columns a inner join information_Schema.tables b on b.TABLE_CATALOG = a.TABLE_CATALOG and b.TABLE_SCHEMA = a.TABLE_SCHEMA and b.TABLE_NAME = a.TABLE_NAME WHERE b.TABLE_TYPE = ''BASE TABLE'' and b.TABLE_NAME = ''',item().src_table, ''' and b.TABLE_SCHEMA = ''',item().src_schema,'''')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"table_select_statement": {
				"type": "String"
			}
		},
		"folder": {
			"name": "SQL to ADLS to SQLDW"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}